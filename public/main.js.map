{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_config/config.js","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_helpers/auth.interceptor.ts","webpack:///./src/app/_models/alert.model.ts","webpack:///./src/app/_models/excercise.model.ts","webpack:///./src/app/_models/user.model.ts","webpack:///./src/app/_models/workout-log.model.ts","webpack:///./src/app/_models/workout.model.ts","webpack:///./src/app/_services/alert.service.ts","webpack:///./src/app/_services/authentication.service.ts","webpack:///./src/app/_services/dao.service.ts","webpack:///./src/app/_services/excercise.service.ts","webpack:///./src/app/_services/workout-log.service.ts","webpack:///./src/app/_services/workout.service.ts","webpack:///./src/app/alert/alert.component.html","webpack:///./src/app/alert/alert.component.scss","webpack:///./src/app/alert/alert.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/loader/loader.component.html","webpack:///./src/app/loader/loader.component.scss","webpack:///./src/app/loader/loader.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/page-header/page-header.component.html","webpack:///./src/app/page-header/page-header.component.scss","webpack:///./src/app/page-header/page-header.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.scss","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/wokout-log/add-log-form/add-log-form.component.html","webpack:///./src/app/wokout-log/add-log-form/add-log-form.component.scss","webpack:///./src/app/wokout-log/add-log-form/add-log-form.component.ts","webpack:///./src/app/wokout-log/workout-log.component.html","webpack:///./src/app/wokout-log/workout-log.component.scss","webpack:///./src/app/wokout-log/workout-log.component.ts","webpack:///./src/app/workout-detail/add-excercise-form/add-excercise-form.component.html","webpack:///./src/app/workout-detail/add-excercise-form/add-excercise-form.component.scss","webpack:///./src/app/workout-detail/add-excercise-form/add-excercise-form.component.ts","webpack:///./src/app/workout-detail/workout-detail.component.html","webpack:///./src/app/workout-detail/workout-detail.component.scss","webpack:///./src/app/workout-detail/workout-detail.component.ts","webpack:///./src/app/workouts-list/add-workout-form/add-workout-form.component.html","webpack:///./src/app/workouts-list/add-workout-form/add-workout-form.component.scss","webpack:///./src/app/workouts-list/add-workout-form/add-workout-form.component.ts","webpack:///./src/app/workouts-list/workouts-list.component.html","webpack:///./src/app/workouts-list/workouts-list.component.scss","webpack:///./src/app/workouts-list/workouts-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","var config = {};\n\nconfig.API_BASE_URL = '/api';\n\nexport default config;\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n  ActivatedRoute,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    }\n    // Navigate to the login page\n    this.authService.redirectUrl = state.url;\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private auth: AuthenticationService) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<any>> {\n    const token: string = this.auth.getToken();\n    if (token) {\n      // Get the token from the service.\n      const authHeader = 'Bearer ' + token;\n      // Clone the request to add the new header.\n      const authReq = req.clone({ setHeaders: { Authorization: authHeader } });\n      // Pass on the cloned request instead of the original request.\n      return next.handle(authReq);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n","export class Alert {\n  type: AlertType;\n  message: string;\n  keepAfterRouteChange: boolean;\n\n  constructor(init?: Partial<Alert>) {\n    Object.assign(this, init);\n  }\n}\n\nexport enum AlertType {\n  Success,\n  Error,\n  Info,\n  Warning,\n}\n","export class Excercise {\n  _id: number;\n  name: string;\n  description: string;\n  set: number;\n  duration: number;\n}\n","export class User {\n  email: string;\n  firstName: string;\n  surName: string;\n  password: string;\n  token: string;\n\n  getFullName(): string {\n    return `${this.firstName} ${this.surName}`;\n  }\n}\n","import { Workout } from './workout.model';\n\nexport class WorkoutLog {\n  date: Date;\n  workout: Workout;\n  constructor(workout: Workout) {\n    this.workout = workout;\n  }\n}\n","import { Excercise } from './excercise.model';\n\nexport class Workout {\n  _id: number;\n  name: string;\n  excercises: Excercise[];\n}\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { AlertType, Alert } from '../_models/alert.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertService {\n  private subject = new Subject<Alert>();\n  private keepAfterRouteChange = false;\n\n  constructor(private router: Router) {\n    // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n    router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        if (this.keepAfterRouteChange) {\n          // only keep for a single route change\n          // this.keepAfterRouteChange = false;\n        } else {\n          // clear alert messages\n          this.clear();\n        }\n      }\n    });\n  }\n\n  getAlert(): Observable<any> {\n    return this.subject.asObservable();\n  }\n\n  success(message: string, keepAfterRouteChange = false) {\n    this.alert(AlertType.Success, message, keepAfterRouteChange);\n  }\n\n  error(message: string, keepAfterRouteChange = false) {\n    this.alert(AlertType.Error, message, keepAfterRouteChange);\n  }\n\n  info(message: string, keepAfterRouteChange = false) {\n    this.alert(AlertType.Info, message, keepAfterRouteChange);\n  }\n\n  warn(message: string, keepAfterRouteChange = false) {\n    this.alert(AlertType.Warning, message, keepAfterRouteChange);\n  }\n\n  alert(type: AlertType, message: string, keepAfterRouteChange = false) {\n    this.keepAfterRouteChange = keepAfterRouteChange;\n    this.subject.next(<Alert>{ type: type, message: message });\n  }\n\n  clear() {\n    // clear alerts\n    this.subject.next();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../_models/user.model';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { map, first } from 'rxjs/operators';\n\nimport config from '../_config/config';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AlertService } from './alert.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  apiBaseUrl: string = config.API_BASE_URL;\n  CURRENT_USER: string = 'auth-token';\n  // store the URL so we can redirect after logging in\n  public redirectUrl: string;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private alertService: AlertService,\n  ) {}\n\n  private saveToken(token: string) {\n    window.localStorage[this.CURRENT_USER] = token;\n  }\n\n  public getToken() {\n    if (window.localStorage[this.CURRENT_USER]) {\n      return window.localStorage[this.CURRENT_USER];\n    } else {\n      return '';\n    }\n  }\n\n  public getCurrentUser(): User {\n    if (this.isLoggedIn()) {\n      const token = this.getToken();\n      const payload = JSON.parse(window.atob(token.split('.')[1]));\n      const user = new User();\n      user.email = payload.email;\n      user.firstName = payload.firstName;\n      user.surName = payload.surName;\n      return user;\n    } else {\n      return;\n    }\n  }\n\n  public isLoggedIn() {\n    const token = this.getToken();\n    if (token) {\n      const payload = JSON.parse(window.atob(token.split('.')[1]));\n      return payload.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n\n  public login(user: User): Observable<User> {\n    const url = `${this.apiBaseUrl}/login`;\n    return this.sendLoginRequest(url, user);\n  }\n\n  public logout() {\n    localStorage.removeItem(this.CURRENT_USER);\n  }\n\n  public register(user: User): Observable<User> {\n    const url = `${this.apiBaseUrl}/register`;\n    return this.sendLoginRequest(url, user);\n  }\n\n  private sendLoginRequest(url: string, user: User): Observable<User> {\n    return this.http.post<User>(url, user).pipe(\n      map(data => {\n        console.log(data);\n        console.log('d');\n        this.saveToken(data.token);\n        this.router.navigateByUrl(this.redirectUrl ? this.redirectUrl : '/');\n        this.redirectUrl = '';\n        return data;\n      }),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport config from '../_config/config.js';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class DaoService<T> {\n  apiBaseUrl: string = config.API_BASE_URL;\n\n  constructor(protected http: HttpClient, private endpoint: string) {}\n\n  /**\n   * Send GET request for list of all instances of entity\n   */\n  findAll(): Observable<T[]> {\n    return this.http.get<T[]>(`${this.apiBaseUrl}/${this.endpoint}`);\n  }\n\n  /**\n   * Send GET request to find instance of entity by id\n   */\n  findById(id: number): Observable<T> {\n    return this.http.get<T>(`${this.apiBaseUrl}/${this.endpoint}/${id}`);\n  }\n\n  /**\n   * Send POST request to create new instance of entity\n   * @param newObject Object to be posted\n   */\n  create(newObject: T): Observable<T[]> {\n    return this.http.post<T[]>(\n      `${this.apiBaseUrl}/${this.endpoint}`,\n      newObject,\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DaoService } from './dao.service';\nimport { Excercise } from '../_models/excercise.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExcerciseService extends DaoService<Excercise> {\n  constructor(http: HttpClient) {\n    super(http, 'workouts');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DaoService } from './dao.service';\nimport { WorkoutLog } from '../_models/workout-log.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WorkoutLogService extends DaoService<WorkoutLog> {\n  constructor(http: HttpClient) {\n    super(http, 'workoutlogs');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Workout } from '../_models/workout.model';\nimport { DaoService } from './dao.service';\nimport { Observable } from 'rxjs';\nimport { Excercise } from '../_models/excercise.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WorkoutService extends DaoService<Workout> {\n  resourceEndpoint: string;\n\n  constructor(http: HttpClient) {\n    super(http, 'workouts');\n    this.resourceEndpoint = 'workouts';\n  }\n\n  addNewExcerise(\n    workoutId: number,\n    newExcercise: Excercise,\n  ): Observable<Workout> {\n    return this.http.post<Workout>(\n      `${this.apiBaseUrl}/${this.resourceEndpoint}/${workoutId}`,\n      newExcercise,\n    );\n  }\n}\n","module.exports = \"<div *ngFor=\\\"let alert of alerts\\\" class=\\\"{{ cssClass(alert) }} alert-dismissable\\\">\\n  <span>{{alert.message}}</span>\\n  <a class=\\\"close\\\" (click)=\\\"removeAlert(alert)\\\">&times;</a>\\n</div>\\n\"","module.exports = \".alert {\\n  padding: 20px;\\n  color: white;\\n  text-align: center;\\n  font-size: 0.9rem;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  display: flex; }\\n  .alert.alert-success {\\n    background: #99d847;\\n    color: white; }\\n  .alert.alert-danger {\\n    background: #fb6262;\\n    color: white; }\\n  .alert.alert-info {\\n    background: #4b99ed;\\n    color: white; }\\n  .alert.alert-warning {\\n    background: #feb819;\\n    color: white; }\\n  .alert span {\\n    flex: 1; }\\n  .alert .close {\\n    cursor: pointer;\\n    transition: all 250ms;\\n    text-decoration: none; }\\n  .alert .close:hover {\\n      -webkit-transform: scale(1.5);\\n              transform: scale(1.5); }\\n\"","import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\nimport { Alert, AlertType } from '../_models/alert.model';\nimport { AlertService } from '../_services/alert.service';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss'],\n})\nexport class AlertComponent implements OnInit {\n  alerts: Alert[] = [];\n\n  constructor(private alertService: AlertService) {}\n\n  ngOnInit() {\n    this.alertService.getAlert().subscribe((alert: Alert) => {\n      if (!alert) {\n        // clear alerts when an empty alert is received\n        this.alerts = [];\n        return;\n      }\n\n      // add alert to array\n      this.alerts.push(alert);\n\n      // remove alert after 3s\n      setTimeout(() => {\n        this.removeAlert(alert);\n      }, 3000);\n    });\n  }\n\n  removeAlert(alert: Alert) {\n    this.alerts = this.alerts.filter(x => x !== alert);\n  }\n\n  cssClass(alert: Alert) {\n    if (!alert) {\n      return;\n    }\n\n    // return css class based on alert type\n    switch (alert.type) {\n      case AlertType.Success:\n        return 'alert alert-success';\n      case AlertType.Error:\n        return 'alert alert-danger';\n      case AlertType.Info:\n        return 'alert alert-info';\n      case AlertType.Warning:\n        return 'alert alert-warning';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { RegisterComponent } from './register/register.component';\nimport { WorkoutsListComponent } from './workouts-list/workouts-list.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { WorkoutDetailComponent } from './workout-detail/workout-detail.component';\nimport { WorkoutLogComponent } from './wokout-log/workout-log.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n    data: { title: 'Workout app login' },\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    data: { title: 'Workout app register' },\n  },\n  {\n    path: 'workouts',\n    component: WorkoutsListComponent,\n    data: { title: 'Workout list' },\n  },\n  {\n    path: 'workout/:id',\n    component: WorkoutDetailComponent,\n    data: { title: 'Workout detail' },\n  },\n  {\n    path: 'workout-log',\n    component: WorkoutLogComponent,\n    data: { title: 'Workout log' },\n    canActivate: [AuthGuard],\n  },\n  {\n    path: '',\n    redirectTo: '/workouts',\n    pathMatch: 'full',\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent,\n    data: { title: 'Workout app - page not found' },\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true }, // <-- debugging purposes only\n    ),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","module.exports = \"\"","module.exports = \"<app-alert></app-alert>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'ittweb2-frontend';\n}\n","import { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { PageHeaderComponent } from './page-header/page-header.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { WorkoutsListComponent } from './workouts-list/workouts-list.component';\nimport { WorkoutService } from './_services/workout.service';\nimport { AuthInterceptor } from './_helpers/auth.interceptor';\nimport { AuthenticationService } from './_services/authentication.service';\nimport { AddWorkoutFormComponent } from './workouts-list/add-workout-form/add-workout-form.component';\nimport { WorkoutDetailComponent } from './workout-detail/workout-detail.component';\nimport { AddExcerciseFormComponent } from './workout-detail/add-excercise-form/add-excercise-form.component';\nimport { LoaderComponent } from './loader/loader.component';\nimport { AlertComponent } from './alert/alert.component';\nimport { AlertService } from './_services/alert.service';\nimport { ExcerciseService } from './_services/excercise.service';\nimport { WorkoutLogComponent } from './wokout-log/workout-log.component';\nimport { AddLogFormComponent } from './wokout-log/add-log-form/add-log-form.component';\nimport { WorkoutLogService } from './_services/workout-log.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageHeaderComponent,\n    LoaderComponent,\n    AlertComponent,\n    LoginComponent,\n    RegisterComponent,\n    PageNotFoundComponent,\n    WorkoutsListComponent,\n    AddWorkoutFormComponent,\n    WorkoutDetailComponent,\n    AddExcerciseFormComponent,\n    WorkoutLogComponent,\n    AddLogFormComponent,\n  ],\n  imports: [BrowserModule, FormsModule, AppRoutingModule, HttpClientModule],\n  providers: [\n    WorkoutService,\n    WorkoutLogService,\n    ExcerciseService,\n    AuthenticationService,\n    AlertService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <!-- By Sam Herbert (@sherb), for everyone. More @ http://goo.gl/7AJzbL -->\\n  <svg width=\\\"44\\\" height=\\\"44\\\" viewBox=\\\"0 0 44 44\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" [attr.stroke]=\\\"stroke\\\">\\n    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" stroke-width=\\\"2\\\">\\n      <circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"1\\\">\\n        <animate attributeName=\\\"r\\\" begin=\\\"0s\\\" dur=\\\"1.8s\\\" values=\\\"1; 20\\\" calcMode=\\\"spline\\\" keyTimes=\\\"0; 1\\\" keySplines=\\\"0.165, 0.84, 0.44, 1\\\"\\n          repeatCount=\\\"indefinite\\\" />\\n        <animate attributeName=\\\"stroke-opacity\\\" begin=\\\"0s\\\" dur=\\\"1.8s\\\" values=\\\"1; 0\\\" calcMode=\\\"spline\\\" keyTimes=\\\"0; 1\\\"\\n          keySplines=\\\"0.3, 0.61, 0.355, 1\\\" repeatCount=\\\"indefinite\\\" />\\n      </circle>\\n      <circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"1\\\">\\n        <animate attributeName=\\\"r\\\" begin=\\\"-0.9s\\\" dur=\\\"1.8s\\\" values=\\\"1; 20\\\" calcMode=\\\"spline\\\" keyTimes=\\\"0; 1\\\" keySplines=\\\"0.165, 0.84, 0.44, 1\\\"\\n          repeatCount=\\\"indefinite\\\" />\\n        <animate attributeName=\\\"stroke-opacity\\\" begin=\\\"-0.9s\\\" dur=\\\"1.8s\\\" values=\\\"1; 0\\\" calcMode=\\\"spline\\\" keyTimes=\\\"0; 1\\\"\\n          keySplines=\\\"0.3, 0.61, 0.355, 1\\\" repeatCount=\\\"indefinite\\\" />\\n      </circle>\\n    </g>\\n  </svg>\\n\\n</div>\\n\"","module.exports = \".wrapper {\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 50px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent implements OnInit {\n  stroke: string = '#4b99ed';\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"<div class=\\\"login_wrapper\\\">\\n  <div class=\\\"login_inner\\\">\\n    <div class=\\\"login_logo\\\">\\n      <img src='assets/images/logo_full.png' alt=\\\"title\\\" />\\n      <h1>Workout App</h1>\\n    </div>\\n\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\" class=\\\"form_login\\\">\\n      <div>\\n        <label for=\\\"username\\\">Email</label>\\n        <input type=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Your email\\\" id=\\\"email\\\" required [(ngModel)]=\\\"user.email\\\" email />\\n      </div>\\n      <div>\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Your password\\\" id=\\\"password\\\" required [(ngModel)]=\\\"user.password\\\" />\\n      </div>\\n      <div>\\n        <input type=\\\"submit\\\" value=\\\"Log In\\\" class=\\\"button button-primary\\\" />\\n        <a [routerLink]=\\\"[backurl]\\\" class=\\\"button button-secondary\\\">Back to app</a>\\n      </div>\\n    </form>\\n    <a [routerLink]=\\\"['/register']\\\">New user? Register here</a>\\n  </div>\\n\\n</div>\\n<footer class=\\\"footer\\\">Created by: Garrett Shirley, Vojtech Rychnovsky, Cuong Nguyen</footer>\\n\"","module.exports = \"/* Login page */\\n.login_wrapper {\\n  height: 100vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n.login_wrapper .login_inner {\\n    width: 460px;\\n    padding: 30px; }\\n.login_wrapper .login_logo {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-evenly; }\\n.login_wrapper .login_logo img {\\n      width: 100px;\\n      height: auto; }\\n.login_wrapper .login_logo h1 {\\n      text-transform: uppercase;\\n      color: #b7b7b7; }\\n.login_wrapper .form_login > div {\\n    margin: 30px 0; }\\n.login_wrapper .form_login label {\\n    display: block;\\n    margin-bottom: 10px; }\\n.login_wrapper .form_login input:not([type='submit']) {\\n    border: 2px solid #b7b7b7;\\n    border-radius: 4px;\\n    padding: 10px;\\n    width: 100%; }\\nfooter.footer {\\n  position: fixed;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  background: white;\\n  padding: 10px 30px;\\n  color: #b7b7b7;\\n  font-size: 0.8rem;\\n  text-align: right;\\n  letter-spacing: 1px;\\n  text-align: center; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from '../_models/user.model';\nimport { AuthenticationService } from '../_services/authentication.service';\n\nimport { first, retry } from 'rxjs/operators';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AlertService } from '../_services/alert.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  @ViewChild('f')\n  form: any;\n\n  user: User = new User();\n\n  backurl: string = '/';\n\n  constructor(\n    private authService: AuthenticationService,\n    private alertService: AlertService,\n  ) {}\n\n  ngOnInit() {\n    if (this.authService.redirectUrl) {\n      // set back link to app\n      const returnurl: string = this.authService.redirectUrl;\n      this.backurl = returnurl === '/workout-log' ? '/' : returnurl;\n    }\n  }\n\n  onSubmit() {\n    console.log(this.user);\n\n    if (this.form.invalid) {\n      if (this.form.controls.email.errors.email) {\n        this.alertService.error('Email has bad format!');\n        return;\n      }\n      this.alertService.error('Fill all the fields in this form!');\n      return;\n    }\n\n    this.authService\n      .login(this.user)\n      .pipe(first())\n      .subscribe(\n        (user: User) => {},\n        (err: HttpErrorResponse) => {\n          console.log(\n            `Backend returned code ${err.status}, body was: `,\n            err.error,\n          );\n\n          this.alertService.error(err.error.message, true);\n\n          return false;\n        },\n      );\n    return false;\n  }\n}\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"container\\\">\\n    <h1>{{ title }} - {{subtitle}}</h1>\\n  </div>\\n</header>\\n\\n<div class=\\\"subheader\\\">\\n  <div class=\\\"container\\\">\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLinkActive=\\\"link-active\\\" [routerLink]=\\\"['/workouts']\\\">Workout list</a></li>\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLinkActive=\\\"link-active\\\" [routerLink]=\\\"['/workout-log']\\\">Workout\\n          log</a></li>\\n    </ul>\\n    <div>\\n      <button *ngIf=\\\"isLoggedIn\\\" (click)=\\\"logOut()\\\" class=\\\"button button-alt\\\">{{currentUserName}} | Logout</button>\\n      <button *ngIf=\\\"!isLoggedIn\\\" (click)=\\\"logIn()\\\" class=\\\"button button-alt\\\">Login</button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".header {\\n  background-color: #4b99ed;\\n  color: #fff;\\n  text-align: center;\\n  text-transform: uppercase; }\\n\\n.subheader {\\n  background-color: #feb819;\\n  font-weight: bold; }\\n\\n.subheader .container {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding: 15px; }\\n\\nul {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 0;\\n  margin: 0; }\\n\\nul li {\\n    list-style: none;\\n    display: inline-block; }\\n\\nul li a {\\n      text-decoration: none;\\n      padding: 5px 20px;\\n      transition: all 200ms; }\\n\\nul li a.link-active, ul li a:hover {\\n        border-radius: 20px;\\n        background: rgba(255, 255, 255, 0.5); }\\n\\nul .nav-item + .nav-item {\\n    margin-left: 20px; }\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { Router, ActivatedRoute, RouterStateSnapshot } from '@angular/router';\nimport { User } from '../_models/user.model';\nimport { AlertService } from '../_services/alert.service';\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.scss'],\n})\nexport class PageHeaderComponent implements OnInit {\n  @Input()\n  title: string;\n  @Input()\n  subtitle: string;\n\n  isLoggedIn: boolean;\n  currentUserName: string;\n\n  constructor(\n    private authService: AuthenticationService,\n    private alertService: AlertService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    this.isLoggedIn = this.authService.isLoggedIn();\n    const currentUser: User = this.authService.getCurrentUser();\n    this.currentUserName = currentUser ? currentUser.getFullName() : '';\n  }\n\n  logOut() {\n    this.authService.logout();\n    this.alertService.success('You have logged out', true);\n\n    let returnUrl: string = this.router.url;\n    if (\n      this.route.routeConfig.canActivate &&\n      this.route.routeConfig.canActivate.length > 0\n    ) {\n      returnUrl = '/';\n    }\n\n    this.authService.redirectUrl = returnUrl;\n    this.router.navigate(['login']);\n    return false;\n  }\n\n  logIn() {\n    let returnUrl: string = this.router.url;\n    if (\n      this.route.routeConfig.canActivate &&\n      this.route.routeConfig.canActivate.length > 0\n    ) {\n      returnUrl = '/';\n    }\n\n    this.authService.redirectUrl = returnUrl;\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>\\n  404 - page not found\\n</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"login_wrapper\\\">\\n  <div class=\\\"login_inner\\\">\\n    <div class=\\\"login_logo\\\">\\n      <img src='assets/images/logo_full.png' alt=\\\"title\\\" />\\n      <h1>Workout App</h1>\\n    </div>\\n    <h2>Register new account</h2>\\n\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\" class=\\\"form_login\\\">\\n      <div>\\n        <label for=\\\"username\\\">First name</label>\\n        <input type=\\\"text\\\" name=\\\"firstname\\\" placeholder=\\\"First name\\\" id=\\\"firstname\\\" required [(ngModel)]=\\\"user.firstName\\\" />\\n      </div>\\n      <div>\\n        <label for=\\\"username\\\">Surname</label>\\n        <input type=\\\"text\\\" name=\\\"surname\\\" placeholder=\\\"Surname\\\" id=\\\"surname\\\" required [(ngModel)]=\\\"user.surName\\\" />\\n      </div>\\n      <div>\\n        <label for=\\\"username\\\">Email</label>\\n        <input type=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Your email\\\" id=\\\"email\\\" required [(ngModel)]=\\\"user.email\\\" email />\\n      </div>\\n      <div>\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Your password\\\" id=\\\"password\\\" required [(ngModel)]=\\\"user.password\\\" />\\n      </div>\\n      <div>\\n        <button type=\\\"submit\\\" class=\\\"button button-primary\\\">Register</button>\\n      </div>\\n    </form>\\n    <a [routerLink]=\\\"['/login']\\\">Already have an account? Log in here</a>\\n  </div>\\n\\n</div>\\n<footer class=\\\"footer\\\">Created by: Garrett Shirley, Vojtech Rychnovsky, Cuong Nguyen</footer>\\n\"","module.exports = \"/* Buttons */\\n.button {\\n  padding: 15px;\\n  border-radius: 4px;\\n  border: 0;\\n  font-size: 1rem;\\n  transition: all 300ms; }\\n.button:hover {\\n    -webkit-transform: scale(1.05);\\n            transform: scale(1.05);\\n    cursor: pointer; }\\n.button.button-primary {\\n    background: #4b99ed;\\n    color: #fff; }\\n/* Login page */\\n.login_wrapper {\\n  height: 100vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n.login_wrapper .login_inner {\\n    width: 460px;\\n    padding: 30px; }\\n.login_wrapper .login_logo {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-evenly; }\\n.login_wrapper .login_logo img {\\n      width: 100px;\\n      height: auto; }\\n.login_wrapper .login_logo h1 {\\n      text-transform: uppercase;\\n      color: #b7b7b7; }\\n.login_wrapper .form_login > div {\\n    margin: 30px 0; }\\n.login_wrapper .form_login label {\\n    display: block;\\n    margin-bottom: 10px; }\\n.login_wrapper .form_login input:not([type='submit']) {\\n    border: 2px solid #b7b7b7;\\n    border-radius: 4px;\\n    padding: 10px;\\n    width: 100%; }\\nfooter.footer {\\n  position: fixed;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  background: white;\\n  padding: 10px 30px;\\n  color: #b7b7b7;\\n  font-size: 0.8rem;\\n  text-align: right;\\n  letter-spacing: 1px;\\n  text-align: center; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { User } from '../_models/user.model';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { first } from 'rxjs/operators';\nimport { AlertService } from '../_services/alert.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent {\n  @ViewChild('f')\n  form: any;\n\n  user: User = new User();\n\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService,\n    private alertService: AlertService,\n  ) {}\n\n  onSubmit() {\n    console.log(this.user);\n\n    if (this.form.invalid) {\n      if (this.form.controls.email.errors.email) {\n        this.alertService.error('Email has bad format!');\n        return;\n      }\n      this.alertService.error('Fill all the fields in this form!');\n      return;\n    }\n\n    this.authService\n      .register(this.user)\n      .pipe(first())\n      .subscribe(\n        data => {\n          console.log(data);\n          this.alertService.success('You have successfully registered!', true);\n          this.router.navigate(['/']);\n        },\n        (err: HttpErrorResponse) => {\n          console.log(\n            `Backend returned code ${err.status}, body was: ${err.error}`,\n          );\n\n          this.alertService.error(err.error.message);\n\n          return false;\n        },\n      );\n\n    return false;\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <h2>Log new workout</h2>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-3\\\">\\n        <label for=\\\"date\\\">Date:</label>\\n        <input class=\\\"form_group\\\" name=\\\"date\\\" id=\\\"date\\\" value=\\\"\\\" type=\\\"date\\\" required [(ngModel)]=\\\"workoutLog.date\\\" #d=\\\"ngModel\\\">\\n        <div *ngIf=\\\"f.submitted && d.invalid\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"d.errors.required\\\">\\n            Date is required\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group col-3\\\">\\n        <label for=\\\"workoutId\\\">Workout: </label>\\n        <div class=\\\"select-wrapper\\\">\\n          <select class=\\\"form-control\\\" name=\\\"workoutId\\\" id=\\\"workoutId\\\" required [(ngModel)]=\\\"workoutLog.workout._id\\\"\\n            #workout=\\\"ngModel\\\">\\n            <option [value]=\\\"xx\\\" selected disabled>Choose here</option>\\n            <option *ngFor=\\\"let wor of workouts\\\" [value]=\\\"wor._id\\\">{{wor.name}}</option>\\n          </select>\\n        </div>\\n        <div *ngIf=\\\"f.submitted && workout.invalid\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"workout.errors.required\\\">\\n            Workout is required\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-row\\\">\\n      <div>\\n        <input value=\\\"Submit\\\" type=\\\"submit\\\" class=\\\"button button-primary\\\">\\n      </div>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","module.exports = \".wrapper {\\n  margin: 30px 0; }\\n\"","import {\n  Component,\n  Input,\n  Output,\n  OnInit,\n  EventEmitter,\n  ViewChild,\n} from '@angular/core';\nimport { Excercise } from '../../_models/excercise.model';\nimport { WorkoutService } from '../../_services/workout.service';\nimport { AlertService } from '../../_services/alert.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Workout } from 'src/app/_models/workout.model';\nimport { WorkoutLog } from 'src/app/_models/workout-log.model';\nimport { WorkoutLogService } from 'src/app/_services/workout-log.service';\n\n@Component({\n  selector: 'app-add-log-form',\n  templateUrl: './add-log-form.component.html',\n  styleUrls: ['./add-log-form.component.scss'],\n})\nexport class AddLogFormComponent implements OnInit {\n  @Output()\n  onWorkoutLogCreated: EventEmitter<any> = new EventEmitter();\n  @ViewChild('f')\n  form: any;\n\n  workoutLog: WorkoutLog = new WorkoutLog(new Workout());\n\n  workouts: Workout[];\n\n  constructor(\n    private workoutService: WorkoutService,\n    private workoutLogService: WorkoutLogService,\n    private alertService: AlertService,\n  ) {\n    console.log(this.workoutLog);\n  }\n\n  ngOnInit() {\n    this.workoutService.findAll().subscribe(workouts => {\n      this.workouts = workouts;\n    });\n  }\n\n  onSubmit() {\n    if (this.form.invalid) {\n      this.alertService.error('Fill the form correctly!');\n      return;\n    }\n\n    this.workoutLogService.create(this.workoutLog).subscribe(\n      data => {\n        this.form.resetForm();\n        this.onWorkoutLogCreated.emit(data);\n        this.alertService.success('New log was created');\n        console.log(data);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(\n          `Backend returned code ${err.status}, body was: ${err.error}`,\n        );\n\n        this.alertService.error(err.error.message);\n\n        return false;\n      },\n    );\n  }\n}\n","module.exports = \"<app-page-header title=\\\"Workout App\\\" subtitle=\\\"Workout log\\\">\\n</app-page-header>\\n\\n<div class=\\\"container main-content\\\">\\n\\n  <h1>{{currentUserName}}, track your workout!</h1>\\n\\n  <ng-container *ngIf=\\\"loading; then loader; else loaded\\\"></ng-container>\\n\\n  <ng-template #loader>\\n    <app-loader *ngIf=\\\"loading\\\"></app-loader>\\n  </ng-template>\\n\\n  <ng-template #loaded>\\n    <app-add-log-form (onWorkoutLogCreated)=\\\"insertWorkoutLog($event)\\\"></app-add-log-form>\\n\\n    <table>\\n      <thead>\\n        <tr>\\n          <th>Date</th>\\n          <th>Workout</th>\\n        </tr>\\n      </thead>\\n      <tr *ngFor=\\\"let log of workoutLogs\\\">\\n        <td>{{log.date | date:'dd/MM/yyyy'}}</td>\\n        <td>{{log.workout.name}}</td>\\n      </tr>\\n      <tr *ngIf=\\\"workoutLogs && !workoutLogs.length\\\">\\n        <td colspan=\\\"4\\\">no logged workouts found</td>\\n      </tr>\\n    </table>\\n\\n\\n  </ng-template>\\n\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Workout } from '../_models/workout.model';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { WorkoutLogService } from '../_services/workout-log.service';\nimport { WorkoutLog } from '../_models/workout-log.model';\n\n@Component({\n  selector: 'app-workout-log',\n  templateUrl: './workout-log.component.html',\n  styleUrls: ['./workout-log.component.scss'],\n})\nexport class WorkoutLogComponent implements OnInit {\n  loading: boolean;\n  currentUserName: string;\n  workoutLogs: WorkoutLog[];\n\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService,\n    private workoutLogService: WorkoutLogService,\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n    this.currentUserName = this.authService.getCurrentUser().firstName;\n    this.loading = false;\n    this.loadWorkoutsList();\n  }\n\n  loadWorkoutsList() {\n    this.workoutLogService.findAll().subscribe(logs => {\n      this.workoutLogs = logs;\n      this.loading = false;\n    });\n  }\n\n  /**\n   * To be passed to child form\n   * @param log New Log to be shown in list\n   */\n  insertWorkoutLog(log: WorkoutLog) {\n    this.workoutLogs.push(log);\n  }\n}\n","module.exports = \"<h2>Add New Exercise</h2>\\n<form (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group col-3\\\">\\n      <label for=\\\"exercise_name\\\">Exercise Name:</label>\\n      <input name=\\\"exercise_name\\\" id=\\\"exercise_name\\\" value=\\\"\\\" type=\\\"text\\\" required [(ngModel)]=\\\"excercise.name\\\" #name=\\\"ngModel\\\">\\n      <div *ngIf=\\\"f.submitted && name.invalid\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"name.errors.required\\\">\\n          Name is required\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group col-3\\\">\\n      <label for=\\\"description\\\">Description:</label>\\n      <input name=\\\"description\\\" id=\\\"description\\\" value=\\\"\\\" type=\\\"text\\\" required [(ngModel)]=\\\"excercise.description\\\"\\n        #description=\\\"ngModel\\\">\\n      <div *ngIf=\\\"f.submitted && description.invalid\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"description.errors.required\\\">\\n          Description is required\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group col-3\\\">\\n      <label for=\\\"num_per_set\\\">Number Per Set:</label>\\n      <input name=\\\"num_per_set\\\" id=\\\"num_per_set\\\" value=\\\"\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"1000\\\" required [(ngModel)]=\\\"excercise.set\\\"\\n        #set=\\\"ngModel\\\">\\n      <div *ngIf=\\\"f.submitted && set.invalid\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"set.errors.required\\\">\\n          Number Per Set is required\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group col-3\\\">\\n      <label for=\\\"num_sets\\\">Number of Sets:</label>\\n      <input class=\\\"form_group\\\" name=\\\"num_sets\\\" id=\\\"num_sets\\\" value=\\\"\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"1000\\\" required\\n        [(ngModel)]=\\\"excercise.duration\\\" #duration=\\\"ngModel\\\">\\n      <div *ngIf=\\\"f.submitted && duration.invalid\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"duration.errors.required\\\">\\n          Number of Sets is required\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group\\\">\\n      <input value=\\\"Submit\\\" type=\\\"submit\\\" class=\\\"button button-primary\\\">\\n      <input reset=\\\"Reset\\\" type=\\\"reset\\\" class=\\\"button\\\">\\n    </div>\\n  </div>\\n</form>\\n\"","module.exports = \".wrapper {\\n  margin-top: 80px; }\\n\"","import {\n  Component,\n  Input,\n  Output,\n  OnInit,\n  EventEmitter,\n  ViewChild,\n} from '@angular/core';\nimport { Excercise } from '../../_models/excercise.model';\nimport { WorkoutService } from '../../_services/workout.service';\nimport { AlertService } from '../../_services/alert.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-add-excercise-form',\n  templateUrl: './add-excercise-form.component.html',\n  styleUrls: ['./add-excercise-form.component.scss'],\n})\nexport class AddExcerciseFormComponent implements OnInit {\n  @Input()\n  workoutId: number;\n  @Output()\n  onExcerciseCreated: EventEmitter<any> = new EventEmitter();\n  @ViewChild('f')\n  form: any;\n\n  excercise: Excercise = new Excercise();\n\n  constructor(\n    private workoutService: WorkoutService,\n    private alertService: AlertService,\n  ) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    if (!this.workoutId) {\n      this.alertService.error('Error when submiting the form!');\n      return false;\n    }\n\n    if (this.form.invalid) {\n      this.alertService.error('Fill the form correctly!');\n      return;\n    }\n\n    this.workoutService\n      .addNewExcerise(this.workoutId, this.excercise)\n      .subscribe(\n        data => {\n          this.form.resetForm();\n          this.onExcerciseCreated.emit(data);\n          this.alertService.success('New excercise created');\n          console.log(data);\n        },\n        (err: HttpErrorResponse) => {\n          console.log(\n            `Backend returned code ${err.status}, body was: ${err.error}`,\n          );\n\n          this.alertService.error(err.error.message);\n\n          return false;\n        },\n      );\n  }\n}\n","module.exports = \"<app-page-header title=\\\"Workout App\\\" subtitle=\\\"Workout detail\\\">\\n</app-page-header>\\n\\n<div class=\\\"container main-content\\\">\\n\\n  <a [routerLink]=\\\"['/workouts']\\\" class=\\\"button button-secondary backlink\\\">Back to Workouts</a>\\n\\n\\n  <ng-container *ngIf=\\\"loading; then loader; else loaded\\\"></ng-container>\\n\\n  <ng-template #loader>\\n    <app-loader *ngIf=\\\"loading\\\"></app-loader>\\n  </ng-template>\\n\\n  <ng-template #loaded>\\n    <h1 *ngIf=\\\"workout\\\">{{workout.name}}</h1>\\n    <table>\\n      <thead>\\n        <tr>\\n          <th>Name</th>\\n          <th>Description</th>\\n          <th>Number Per Set</th>\\n          <th>Number of Sets</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let excercise of excercises\\\">\\n          <td>{{excercise.name}}</td>\\n          <td>{{excercise.description}}</td>\\n          <td>{{excercise.set}}</td>\\n          <td>{{excercise.duration}}</td>\\n        </tr>\\n        <tr *ngIf=\\\"excercises && !excercises.length\\\">\\n          <td colspan=\\\"4\\\">no excercises found</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <app-add-excercise-form *ngIf=\\\"isLoggedIn===true\\\" (onExcerciseCreated)=\\\"insertExcercise($event)\\\" workoutId={{workout._id}}></app-add-excercise-form>\\n\\n    <p *ngIf=\\\"!isLoggedIn\\\">You must be logged in to add new excercises to this workout - <a [routerLink]=\\\"['/login']\\\"\\n        [queryParams]=\\\"{return: redirecturl}\\\">login\\n        now</a></p>\\n  </ng-template>\\n\\n\\n\\n</div>\\n\"","module.exports = \".backlink {\\n  margin-top: 20px;\\n  display: inline-block; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Workout } from '../_models/workout.model';\nimport { WorkoutService } from '../_services/workout.service';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Excercise } from '../_models/excercise.model';\n\n@Component({\n  selector: 'app-workout-detail',\n  templateUrl: './workout-detail.component.html',\n  styleUrls: ['./workout-detail.component.scss'],\n})\nexport class WorkoutDetailComponent implements OnInit {\n  workout: Workout;\n  isLoggedIn: boolean = false;\n  excercises: Excercise[];\n  loading: boolean;\n  redirecturl: string;\n\n  constructor(\n    private workoutService: WorkoutService,\n    private authService: AuthenticationService,\n    private activeRoute: ActivatedRoute,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.isLoggedIn = this.authService.isLoggedIn();\n    this.loading = true;\n    this.activeRoute.params.subscribe(routeParams => {\n      this.loadWorkoutDetail(routeParams.id);\n    });\n    this.redirecturl = this.router.url;\n  }\n\n  loadWorkoutDetail(id: number) {\n    this.workoutService.findById(id).subscribe(workout => {\n      this.workout = workout;\n      this.excercises = workout.excercises;\n      this.loading = false;\n    });\n  }\n\n  /**\n   * To be passed to child form\n   * @param excercise New excercise to be shown in list\n   */\n  insertExcercise(excercise: Excercise) {\n    console.log(excercise);\n    this.excercises.push(excercise);\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <h2>Add New Workout</h2>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-3\\\">\\n        <label for=\\\"workout_name\\\">Workout Name:</label>\\n        <input name=\\\"workout_name\\\" id=\\\"workout_name\\\" value=\\\"\\\" type=\\\"text\\\" required [(ngModel)]=\\\"workout.name\\\" #name=\\\"ngModel\\\">\\n        <div *ngIf=\\\"f.submitted && name.invalid\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"name.errors.required\\\">\\n            Name is required\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-3\\\">\\n        <input value=\\\"Submit\\\" type=\\\"submit\\\" class=\\\"button button-primary\\\">\\n        <input reset=\\\"Reset\\\" type=\\\"reset\\\" class=\\\"button\\\">\\n      </div>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","module.exports = \".wrapper {\\n  margin-top: 80px; }\\n\"","import {\n  Component,\n  Output,\n  OnInit,\n  EventEmitter,\n  ViewChild,\n} from '@angular/core';\nimport { WorkoutService } from '../../_services/workout.service';\nimport { Workout } from '../../_models/workout.model';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AlertService } from '../../_services/alert.service';\nimport { retry } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-workout-form',\n  templateUrl: './add-workout-form.component.html',\n  styleUrls: ['./add-workout-form.component.scss'],\n})\nexport class AddWorkoutFormComponent implements OnInit {\n  @Output()\n  onWorkoutCreated: EventEmitter<any> = new EventEmitter();\n  @ViewChild('f')\n  form: any;\n\n  workout: Workout = new Workout();\n\n  constructor(\n    private workoutService: WorkoutService,\n    private alertService: AlertService,\n  ) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    if (this.form.invalid) {\n      this.alertService.error('Fill the form correctly!');\n      return;\n    }\n    this.workoutService.create(this.workout).subscribe(\n      data => {\n        this.onWorkoutCreated.emit(data);\n        this.alertService.success('New workout created');\n        console.log(data);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(\n          `Backend returned code ${err.status}, body was: ${err.error}`,\n        );\n\n        this.alertService.error(err.error.message);\n\n        return false;\n      },\n    );\n    this.form.resetForm();\n\n    return false;\n  }\n}\n","module.exports = \"<app-page-header title=\\\"Workout App\\\" subtitle=\\\"List of workouts\\\">\\n</app-page-header>\\n\\n<div class=\\\"container main-content\\\">\\n\\n  <h1 *ngIf=\\\"isLoggedIn\\\">Welcome {{currentUserName}}!</h1>\\n\\n  <ng-container *ngIf=\\\"loading; then loader; else loaded\\\"></ng-container>\\n\\n  <ng-template #loader>\\n    <app-loader *ngIf=\\\"loading\\\"></app-loader>\\n  </ng-template>\\n\\n  <ng-template #loaded>\\n    <table>\\n      <tr *ngFor=\\\"let workout of workouts\\\">\\n        <td><a [routerLink]=\\\"['/workout', workout._id]\\\">{{workout.name}}</a></td>\\n      </tr>\\n    </table>\\n\\n    <app-add-workout-form *ngIf=\\\"isLoggedIn\\\" (onWorkoutCreated)=\\\"insertWorkout($event)\\\"></app-add-workout-form>\\n\\n    <p *ngIf=\\\"!isLoggedIn\\\">You must be logged in to add new workout programs - <a [routerLink]=\\\"['/login']\\\"\\n        [queryParams]=\\\"{return: redirecturl}\\\">login\\n        now</a></p>\\n  </ng-template>\\n\\n</div>\\n\"","module.exports = \".main-content {\\n  padding-top: 50px;\\n  padding-bottom: 50px; }\\n  .main-content table tbody tr:hover {\\n    background: #fff; }\\n  .main-content table a {\\n    display: block; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { WorkoutService } from '../_services/workout.service';\nimport { Workout } from '../_models/workout.model';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { User } from '../_models/user.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-workouts-list',\n  templateUrl: './workouts-list.component.html',\n  styleUrls: ['./workouts-list.component.scss'],\n})\nexport class WorkoutsListComponent implements OnInit {\n  loading: boolean;\n  isLoggedIn: boolean = false;\n  currentUserName: string;\n  workouts: Workout[];\n  redirecturl: string = '';\n\n  constructor(\n    private workoutService: WorkoutService,\n    private authService: AuthenticationService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n    this.isLoggedIn = this.authService.isLoggedIn();\n    const currentUser: User = this.authService.getCurrentUser();\n    this.currentUserName = currentUser ? currentUser.firstName : '';\n    this.loadWorkoutsList();\n    this.redirecturl = this.router.url;\n  }\n\n  loadWorkoutsList() {\n    this.workoutService.findAll().subscribe(workouts => {\n      this.workouts = workouts;\n      this.loading = false;\n    });\n  }\n\n  /**\n   * To be passed to child form\n   * @param workout New workout to be shown in list\n   */\n  insertWorkout(workout: Workout) {\n    this.workouts.push(workout);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}